@page "/GetTest"
@using Models
@using DataAccess
@using Microsoft.Extensions.Configuration
@inject ISqlAccess _data
@inject IConfiguration _config
@inject IJSRuntime JS
@inject NavigationManager NavigationManager
<div class="navbar">
    <button type="button" class="header-button" onclick="location.href='/Admin'">Home</button>
    <button type="button" class="header-button" onclick="location.href='/PaperTable'">Papers</button>
    <button type="button" class="header-button" onclick="location.href='/AuthorTable'">Authors</button>
    <button type="button" class="header-button" onclick="location.href='/ReviewTable'">Reviews</button>
    <button type="button" class="header-button" onclick="location.href='/ReviewerTable'">Reviewers</button>
</div>

<!DOCTYPE html>
<html>
<body>
    <div style="margin:50px;">
        <h3>Author Table</h3>
        <table>
            <tr>
                <th>AuthorID</th>
                <th>First Name</th>
                <th>M.</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Password</th>
                <th>Affiliation</th>
                <th>Department</th>
                <th>Address</th>
                <th>City</th>
                <th>State</th>
                <th>ZipCode</th>
                <th>PhoneNumber</th>
                <th>Edit</th>
            </tr>
            @foreach (var user in currAuthors)
            {
                <tr>
                    <td>@user.AuthorID</td>
                    <td>@user.FirstName</td>
                    <td>@user.MiddleInitial</td>
                    <td>@user.LastName</td>
                    <td>@user.EmailAddress</td>
                    <td>@user.Password</td>
                    <td>@user.Affiliation</td>
                    <td>@user.Department</td>
                    <td>@user.Address</td>
                    <td>@user.City</td>
                    <td>@user.State</td>
                    <td>@user.ZipCode</td>
                    <td>@user.PhoneNumber</td>
                    <td>
                        <button type="submit" name="button" onclick="location.href='/AuthorTableModify/' + @user.AuthorID">Modify</button><br>
                        <form onsubmit="location.href = '/AuthorTable'">
                            <button type="submit" name="button" @onclick="() => deleteAuthor(user.AuthorID)">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        </table>
    </div>
</body>
</html>
@code {
    private List<AuthorModel> currAuthors = new List<AuthorModel>();
    protected override async Task OnInitializedAsync()
    {
        string sql = "SELECT ReviewerID, FirstName, MiddleInitial, LastName, Affiliation, Department, Address, City, State, ZipCode, PhoneNumber, EmailAddress, Password FROM Author";
        try
        {
            currAuthors = await _data.LoadData<AuthorModel, dynamic>(sql, new { }, _config.GetConnectionString("DefaultConnection"));
        }
        catch (Exception ex)
        {
            NavigationManager.NavigateTo("Error/"+ex.Message);
        }
    }
    private Task deleteAuthor(int authorID)
    {
        string sql = "DELETE Author WHERE AuthorID = '" + authorID + "'";
        return _data.SaveData<dynamic>(sql, new { }, _config.GetConnectionString("DefaultConnection"));
    }
}
