@page "/MyReviews/{reviewerID}"

@using TestDB.Models
@using DataAccess
@using Microsoft.Extensions.Configuration
@inject ISqlAccess _data
@inject IConfiguration _config

<div class="navbar">
    <button type="button" class="header-button" onclick="location.href='/Reviewer/'+@reviewerID">Home</button>
    <button type="button" class="header-button" onclick="location.href='/UploadReview/'+@reviewerID">Submit New Paper</button>
    <button type="button" class="header-button" onclick="location.href='/MyReviews/'+@reviewerID">My Paper</button>
    <button type="button" class="header-button" onclick="location.href = '/ReviewerAccount/'+@reviewerID">My Account</button>
</div>

<h3>My Reviews</h3>
<table>
    <tr>
        <th>Review ID</th>
        <th>Paper ID</th>
        <th>Reviewer ID</th>
        <th>Complete</th>
        <th>Scores</th>
        <th>Edit</th>
    </tr>
    @foreach (var review in reviews)
    {
        <tr>
            <td>@review.ReviewID</td>
            <td>@review.PaperID</td>
            <td>@review.ReviewerID</td>
            <td>@review.Complete</td>
            <td>
                <button type="submit" name="button" onclick="location.href='/ReviewScores/' + @review.ReviewID">See Scores</button><br>
            </td>
            <td>
                <form onsubmit="location.href = '/PaperTable'">
                    <button type="submit" name="button" @onclick="() => deleteReview(review.ReviewID)">Delete</button>
                </form>
            </td>
        </tr>
}
</table>

@code {
    [Parameter]
    public string reviewerID { get; set; }


    private List<Review> reviews = new List<Review>();

    protected override async Task OnInitializedAsync()
    {
        string sql = "SELECT * FROM Review WHERE ReviewerID='" + reviewerID + "'";
        reviews = await _data.LoadData<Review, dynamic>(sql, new { }, _config.GetConnectionString("DefaultConnection"));
    }

    private Task deleteReview(int reviewID)
    {
        string sql = "DELETE Review WHERE ReviewID = '" + reviewID + "'";
        return _data.SaveData<dynamic>(sql, new { }, _config.GetConnectionString("DefaultConnection"));
    }
}
